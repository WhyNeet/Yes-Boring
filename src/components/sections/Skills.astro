---
import Appear from "../Appear.astro";

const skills = [
  {
    group: "Backend Development",
    items: [
      {
        name: "Axum",
        experience: 1,
        level: "Advanced",
        progress: 0.7
      },
      {
        name: "Actix",
        experience: 0,
        level: "Beginner",
        progress: 0.25
      },
      {
        name: "NestJS",
        experience: 1,
        level: "Intermediate",
        progress: 0.5
      },
      {
        name: "Express",
        experience: 1,
        level: "Intermediate",
        progress: 0.35
      },
    ]
  },
  {
    group: "Frontend Development",
    items: [
      {
        name: "React",
        experience: 2,
        level: "Intermediate",
        progress: 0.5
      },
      {
        name: "TypeScript",
        experience: 3,
        level: "Advanced",
        progress: 0.75
      },
      {
        name: "Tailwind",
        experience: 2,
        level: "Advanced",
        progress: 0.75
      },
      {
        name: "Redux",
        experience: 0,
        level: "Beginner",
        progress: 0.25
      },
    ]
  },
  {
    group: "Infrastructure",
    items: [
      {
        name: "Redis",
        experience: 2,
        level: "Intermediate",
        progress: 0.5
      },
      {
        name: "MongoDB",
        experience: 2,
        level: "Intermediate",
        progress: 0.5
      },
      {
        name: "Postgres",
        experience: 1,
        level: "Beginner",
        progress: 0.25
      },
      {
        name: "RabbitMQ",
        experience: 0,
        level: "Beginner",
        progress: 0.25
      },
    ]
  },
  {
    group: "Tools & Systems",
    items: [
      {
        name: "Git",
        experience: 3,
        level: "Intermediate",
        progress: 0.5
      },
      {
        name: "Docker",
        experience: 2,
        level: "Intermediate",
        progress: 0.5
      },
      {
        name: "Linux",
        experience: 1,
        level: "Beginner",
        progress: 0.35
      },
      {
        name: "Kubernetes",
        experience: 1,
        level: "Beginner",
        progress: 0.35
      },
    ]
  },
  {
    group: "Platforms",
    items: [
      {
        name: "Vercel",
        experience: 2,
        level: "Intermediate",
        progress: 0.5
      },
      {
        name: "Cloudflare",
        experience: 0,
        level: "Beginner",
        progress: 0.35
      },
      {
        name: "AWS",
        experience: 0,
        level: "Beginner",
        progress: 0.2
      },
      {
        name: "Render",
        experience: 2,
        level: "Intermediate",
        progress: 0.5
      },
    ]
  }
];
---
<section class="relative overflow-hidden">
  <div class="max-w-4xl mx-auto pb-20">
    <h2
      class="text-9xl font-extrabold text-transparent bg-clip-text mb-10 max-w-fit"
      id="skills-title"
    >
      Skills
    </h2>
    { skills.map(({group, items}) => <Appear offset={0.95}>
      <div class="mb-20 opacity-[var(--appear)] transition-all duration-300 ease-[cubic-bezier(0.5,1,0.89,1)] scale-intro">
        <div class="flex items-center gap-4 mb-6">
          <h3 class="min-w-fit">{ group }</h3>
          <hr class="w-full text-neutral-400" />
        </div>
        <div class="grid grid-cols-2 grid-rows-2 gap-8 skills-grid">
          { items.map(item => <div>
            <div class="area">
              <h4>
                { item.name }
                <span>{item.experience}+</span>
              </h4>
              <div>{item.level}</div>
            </div>
            <div class="progress">
              <div style={{ width: `calc(${item.progress} * var(--appear) * 100%)` }}></div>
            </div>
          </div>) }
        </div>
      </div>
    </Appear>) }
  </div>
  <div class="absolute gradient -inset-x-20 -bottom-4 h-8 blur-3xl" />
</section>

<style>
  @reference "tailwindcss";

  section {
    background-size:
      100%,
      40px 40px,
      40px 40px;
    background-image:
      linear-gradient(to top, transparent, white),
      linear-gradient(to right, var(--color-neutral-100) 1px, transparent 1px),
      linear-gradient(to bottom, var(--color-neutral-100) 1px, transparent 1px);
      animation: grid-move linear infinite 1000ms;
  }

  @keyframes grid-move {
    0% {
      background-position: 0, 0, 0px 0px;
    }

    100% {
      background-position: 0px, 0 0, 0 -40px;
    }
  }

  h2 {
    background-image: linear-gradient(to top, black, black), linear-gradient(to bottom right, oklch(85.2% 0.199 91.936 / .2), oklch(63.7% 0.237 25.331 / .2), oklch(68.5% 0.169 237.323 / .2), oklch(76.5% 0.177 163.223 / .2));
    background-position: calc(-461px + 461px * var(--progress, 0)) top, 0;
    background-repeat: no-repeat;
    will-change: background-position;
    @apply transition-all duration-150 ease-[cubic-bezier(0.5,1,0.89,1)];
  }

  .skills-grid > div {
    & > .area {
      @apply flex items-center justify-between mb-4;

      & > h4 {
        @apply flex items-center gap-4;

        & > span {
          @apply text-xs text-neutral-400;
        }
      }

      & > div {
        @apply text-sm text-neutral-400;
      }
    }

    & > .progress {
      @apply h-[1px] bg-neutral-300;

      & > div {
        will-change: width;
        @apply bg-black h-full relative after:h-2 after:w-2 after:bg-black after:rounded-full after:absolute after:right-0 after:-top-1 transition-all duration-300 ease-[cubic-bezier(0.5,1,0.89,1)];
      }
    }
  }

  .scale-intro {
    transform: scale(calc(0.95 + var(--appear) * 0.05)) translateY(calc((1 - var(--appear) ) * 20px));
    will-change: transform, opacity;
  }
</style>

<script>
  const title = document.getElementById("skills-title")!;

  window.addEventListener("scroll", () => {
    const progressRaw =
      (window.scrollY - window.innerHeight * 2) / (window.innerHeight * 0.9);
    const progress = Math.min(Math.max(progressRaw, 0), 1);
    title.style.setProperty("--progress", progress.toString());
  });
</script>
